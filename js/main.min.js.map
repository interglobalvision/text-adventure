{"version":3,"sources":["main.js"],"names":["Adventure","story","container","$","form","input","$customForm","$focus","$mainContainer","currentPlace","save","init","place","_this","this","window","on","event","target","toString","focus","submit","preventDefault","val","listen","go","clean","html","removeClass","addClass","say","toUpperCase","_","has","type","chat","question","description","text","toLowerCase","words","split","actions","keys","i","length","action","list","x","indexOf","help","name","regexp","found","match","variable","substr","replace","append","scrollTo","document","body","scrollHeight","conversation","options","chatForm","ffs","size","checked","find","bind","selectedOption","nextPlace","answerName","questionForm","answer","placeExist","ready","Story","load"],"mappings":"AAGAA,WACEC,MAAO,GACPC,UAAWC,EAAE,gBACbC,KAAMD,EAAE,eACRE,MAAOF,EAAE,eACTG,YAAaH,EAAE,0BACfI,OAAQ,KACRC,eAAgBL,EAAE,mBAClBM,aAAc,KACdC,QACAC,KAAM,SAASV,EAAOW,GACpB,GAAIC,GAAQC,IAGZD,GAAMZ,MAAQA,EAGdE,EAAEY,QAAQC,GAAG,QAAS,SAASC,GAGI,8BAA5BA,EAAMC,OAAOC,YAChBN,EAAMN,OAAOa,UAKjBP,EAAMT,KAAKiB,OAAQ,SAASJ,GAI1B,MAHAA,GAAMK,iBAGqB,KAAtBT,EAAMR,MAAMkB,OACR,MAGTV,GAAMW,OAAQX,EAAMR,MAAMkB,SAG5BV,EAAMY,GAAGb,IAGXc,MAAO,WACL,GAAIb,GAAQC,IAEZD,GAAMR,MAAMkB,IAAI,IAChBV,EAAMP,YAAYqB,KAAK,IACvBd,EAAML,eAAeoB,cAAcC,SAAS,cAI9CJ,GAAI,SAASb,GACX,GAAIC,GAAQC,IAYZ,IATAD,EAAMiB,IAAIjB,EAAMR,MAAMkB,MAAMQ,eAG5BlB,EAAMa,QAGNb,EAAMJ,aAAeI,EAAMZ,MAAMW,GAG3BoB,EAAEC,IAAIpB,EAAMJ,aAAc,QAS9B,OAAOI,EAAMJ,aAAayB,MACxB,IAAK,eACHrB,EAAMsB,MACN,MAGF,KAAK,WACHtB,EAAMuB,eAdVvB,GAAMN,OAASM,EAAMR,MAGrBQ,EAAMiB,IAAIjB,EAAMJ,aAAa4B,YAmB/BxB,GAAMN,OAAOa,SAGfI,OAAQ,SAASc,GACf,GAAIzB,GAAQC,IAGZwB,GAAOA,EAAKC,aAQZ,KAAK,GALDC,GAAQF,EAAKG,MAAM,KAGnBC,EAAUV,EAAEW,KAAK9B,EAAMJ,aAAaiC,SAE/BE,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAAK,CACrC,GAAIE,GAASN,EAAMI,EAGnB,IAAe,SAAXE,EAAmB,CAIrB,IAAK,GAFDC,GAAO,oCAEFC,EAAI,EAAGA,EAAIN,EAAQG,OAAQG,IAClCD,GAAQ,2BAA6BL,EAAQM,GAAGjB,cAAgB,OAGlEgB,IAAQ,QACRlC,EAAMa,QACNb,EAAMiB,IAAIiB,EACV,OAEK,GAAe,SAAXD,EAuBJ,CAAA,GAAId,EAAEiB,QAAQP,EAAQI,IAAW,EAAG,CAEzCjC,EAAMY,GAAGZ,EAAMJ,aAAaiC,QAAQI,GACpC,OAMId,EAAEiB,QAAQP,EAAS,YAAc,EACnC7B,EAAMY,GAAIZ,EAAMJ,aAAaiC,QAAnB7B,aAEVA,EAAMiB,IAAIgB,EAAOf,eACjBlB,EAAMiB,IAAI,oBACVjB,EAAMa,QAGR,OAvCAb,EAAMiB,IAAI,mBACV,IAAIoB,GAAO,0kCAcuBrC,EAAMJ,aAAa0C,KAAO,MAE5DtC,GAAMiB,IAAIoB,GACVrC,EAAMiB,IAAIjB,EAAMJ,aAAa4B,aAC7BxB,EAAMa,UA0BZI,IAAK,SAASQ,GACZ,GAAIzB,GAAQC,KACRsC,EAAS,aACTC,EAAQf,EAAKgB,MAAMF,EAEvB,IAAIC,EAAO,CACT,GAAIE,GAAWF,EAAM,GAAGG,OAAO,EAAIH,EAAM,GAAGR,OAAS,GAAIW,OAAO,EAEhElB,GAAOA,EAAKmB,QAAQL,EAAQvC,EAAMH,KAAK6C,IAGzCjB,EAAO,MAAQA,EAAO,OACtBA,EAAOA,EAAKmB,QAAQ,MAAO,UAC3B5C,EAAMX,UAAUwD,OAAOpB,GAEvBvB,OAAO4C,SAAS,EAAEC,SAASC,KAAKC,eAGlC3B,KAAM,SAAS4B,GACb,GAAIlD,GAAQC,IAGZiD,GAAuC,mBAAjBA,GAA+BlD,EAAMZ,MAAM8D,GAAcC,QAAUnD,EAAMJ,aAAauD,OAK5G,KAAK,GAHDC,GAAW,0BAGNC,EAAM,EAAGA,GAAOlC,EAAEmC,KAAKJ,GAAeG,IAAO,CACpD,GAAIE,GAAkB,IAARF,EAAY,UAAY,EAEtCD,IAAY,oBAAsBC,EAAM,6CAA+CA,EAAM,KAAOE,EAAU,wBAA0BF,EAAM,KAAOH,EAAaG,GAAO,iBAI3KD,GAAY,8CAGZpD,EAAMP,YAAYqB,KAAKsC,GACvBpD,EAAMP,YAAcH,EAAE,0BACtBU,EAAMiB,IAAIjB,EAAMJ,aAAa4B,aAC7BxB,EAAML,eAAeqB,SAAS,gBAG9BhB,EAAMN,OAASJ,EAAE,YAGjBU,EAAMP,YAAY+D,KAAK,gBAAgBC,KAAK,SAAU,SAASrD,GAC7DA,EAAMK,gBACN,IAAIiD,GAAiBpE,EAAE,+BAA+BoB,KAGtD,IAAwB,KAAnBgD,EACH,OAAO,CAGT,IAAIC,GAAY3D,EAAMJ,aAAaiC,QAAQ6B,EAE3C1D,GAAMiB,IAAIjB,EAAMJ,aAAauD,QAAQO,GAAgBxC,eACrDlB,EAAMY,GAAG+C,MAKbpC,SAAU,SAASA,GACjB,GAAIvB,GAAQC,KAGR2D,EAAiC,mBAAbrC,GAA2BvB,EAAMZ,MAAMmC,GAAU1B,KAAOG,EAAMJ,aAAaC,KAG/FgE,EAAe,iJAGnB7D,GAAMP,YAAYqB,KAAK+C,GACvB7D,EAAMP,YAAcH,EAAE,0BACtBU,EAAMiB,IAAIjB,EAAMJ,aAAa4B,aAC7BxB,EAAML,eAAeqB,SAAS,YAG9BhB,EAAMN,OAASJ,EAAE,mBAGjBU,EAAMP,YAAY+D,KAAK,gBAAgBC,KAAK,SAAU,SAASrD,GAC7DA,EAAMK,gBACN,IAAIqD,GAASxE,EAAE,mBAAmBoB,KAElC,OAAgB,KAAXoD,GACI,GAGT9D,EAAMH,KAAK+D,GAAcE,EAAO5C,cAEhClB,EAAMiB,IAAI6C,EAAO5C,mBACjBlB,GAAMY,GAAGZ,EAAMJ,aAAaiC,QAAnB7B,gBAKb+D,WAAY,SAAShE,GACnB,GAAIC,GAAQC,IAEZ,OAAqC,gBAAzBD,GAAMZ,MAAMW,IACf,GAEA,IAKbT,EAAEyD,UAAUiB,MAAM,WAChB,YACA7E,WAAUW,KAAKmE,MAAO,aAIxB3E,EAAEY,QAAQgE,KAAK","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global $, document, Adventure, _, Story */\n\nAdventure = {\n  story: '',\n  container: $('#description'),\n  form: $('#input-form'),\n  input: $('#text-input'),\n  $customForm: $('#custom-form-container'),\n  $focus: null,\n  $mainContainer: $('#main-container'),\n  currentPlace: null,\n  save: {},\n  init: function(story, place) {\n    var _this = this;\n\n    // Set story\n    _this.story = story;\n\n    // Prevent input blur\n    $(window).on('click', function(event){\n\n      // Check this isn't triggered by moving beteween radio buttons\n      if ( event.target.toString() !== \"[object HTMLInputElement]\") {\n        _this.$focus.focus();\n      }\n    });\n\n    // Bind event\n    _this.form.submit( function(event) {\n      event.preventDefault();\n\n      // Validate for empty values\n      if ( _this.input.val() === '' ) {\n        return false;\n      }\n\n      _this.listen( _this.input.val() );\n    });\n\n    _this.go(place);\n  },\n\n  clean: function() {\n    var _this = this;\n\n    _this.input.val('');\n    _this.$customForm.html('');\n    _this.$mainContainer.removeClass().addClass('container');\n\n  },\n\n  go: function(place) {\n    var _this = this;\n\n    // Output command\n    _this.say(_this.input.val().toUpperCase());\n\n    // Clear\n    _this.clean();\n\n    // Set new place\n    _this.currentPlace = _this.story[place];\n\n    // Check if place is not a special type ex. conversation, question\n    if ( !_.has(_this.currentPlace, 'type') ) {\n      // Set focus element\n      _this.$focus = _this.input;\n\n      // Print description\n      _this.say(_this.currentPlace.description);\n\n      // else is special type\n    } else {\n      switch(_this.currentPlace.type) {\n        case 'conversation': {\n          _this.chat();\n          break;\n        }\n\n        case 'question': {\n          _this.question();\n          break;\n        }\n\n      }\n    }\n\n    // focus\n    _this.$focus.focus();\n  },\n\n  listen: function(text) {\n    var _this = this;\n\n    // Convert to lowercase\n    text = text.toLowerCase();\n\n    // Split text into words in case theres more than just one word\n    var words = text.split(' ');\n\n    // Get an array of all available actions\n    var actions = _.keys(_this.currentPlace.actions);\n\n    for (var i = 0; i < words.length; i++) {\n      var action = words[i];\n\n      // if 'list'\n      if (action === 'list') {\n\n        var list = '<p>From here you can say:</p><ul>';\n\n        for (var x = 0; x < actions.length; x++) {\n          list += '<li class=\"list-option\">' + actions[x].toUpperCase() + '</li>';\n        }\n\n        list += '</ul>';\n        _this.clean();\n        _this.say(list);\n        break;\n\n      } else if (action === 'help') {\n        _this.say('============HELP');\n        var help = '<p>You can move around and interact with this world by typing commands when prompted with the cursor and then pressing ENTER.</p>' +\n          '<p>When you enter a new position on the map a description of that position is read to you. The available commands for that position will be in upper case letters.</p>' +\n          '<p>Directional commands like EAST or SOUTHEAST will move you to a new position. Object commands like PAINTING or VIDEO will tell you about an object in the world.</p>' +\n          '<p>...</p>' +\n          '<p>Sometimes a person will start a conversation with you. When it is time to speak back you will be given a list of responses like:</p>' +\n          '<p>>&nbsp;Yes<br>&nbsp;&nbsp;No</p>' +  \n          '<p>You can choose a response with the UP and DOWN arrow keys, and press RETURN or ENTER to select it.</p>' +\n          '<p>...</p>' +\n          '<p>Also there are commands you can use at any time to help you on your way:</p>' +\n          '<p>Type LIST to see a list of possible commands from your current position.</p>' +\n          '<p>Type MAP to see the world map.</p>' +\n          '<p>Type RESTART to return to the beginning of the world.</p>' +\n          '<p>Type HELP to see this information again.</p>' +\n          '<p>...</p>' +\n          '<p>You current position is ' + _this.currentPlace.name + '</p>';\n\n        _this.say(help);\n        _this.say(_this.currentPlace.description);\n        _this.clean();\n\n      // Check if action exists\n      } else if (_.indexOf(actions,action) >= 0) {\n\n        _this.go(_this.currentPlace.actions[action]);\n        break;\n\n      // Action not found\n      } else {\n\n        // Check for default action\n        if (_.indexOf(actions, 'default') >= 0) {\n          _this.go( _this.currentPlace.actions.default);\n        } else {\n          _this.say(action.toUpperCase());\n          _this.say('action not found');\n          _this.clean();\n        }\n\n        break;\n\n      }\n    }\n  },\n\n  say: function(text) {\n    var _this = this;\n    var regexp = /\\{\\{.*\\}\\}/;\n    var found = text.match(regexp);\n\n    if (found) {\n      var variable = found[0].substr(0, (found[0].length - 2)).substr(2);\n\n      text = text.replace(regexp, _this.save[variable]);\n    }\n\n    text = '<p>' + text + '</p>';\n    text = text.replace(/\\n/g, '<br />');\n    _this.container.append(text);\n\n    window.scrollTo(0,document.body.scrollHeight);\n  },\n\n  chat: function(conversation) {\n    var _this = this;\n\n    // Get the conversation\n    conversation = typeof conversation !== 'undefined' ? _this.story[conversation].options : _this.currentPlace.options;\n\n    var chatForm = '<form id=\"custom-form\">';\n\n    // Generate radio buttons\n    for (var ffs = 1; ffs <= _.size(conversation); ffs++) {\n      var checked = ffs === 1 ? 'checked' : '';\n\n      chatForm += '<input id=\"radio-' + ffs + '\" type=\"radio\" name=\"conversation\" value=\"' + ffs + '\" ' + checked + ' /><label for=\"radio-' + ffs + '\">' + conversation[ffs] + '</label><br />';\n    }\n\n    // Add submit button, close form\n    chatForm += '<input type=\"submit\" value=\"Submit\"></form>';\n\n    // insert dom and container class\n    _this.$customForm.html(chatForm);\n    _this.$customForm = $('#custom-form-container');\n    _this.say(_this.currentPlace.description);\n    _this.$mainContainer.addClass('conversation');\n\n    // Set new focus element\n    _this.$focus = $('#radio-1');\n\n    // Bind submit\n    _this.$customForm.find('#custom-form').bind('submit', function(event) {\n      event.preventDefault();\n      var selectedOption = $('input[type=\"radio\"]:checked').val();\n\n      // Validate for empty values\n      if ( selectedOption === '' ) {\n        return false;\n      }\n\n      var nextPlace = _this.currentPlace.actions[selectedOption];\n\n      _this.say(_this.currentPlace.options[selectedOption].toUpperCase());\n      _this.go(nextPlace);\n    });\n\n  },\n\n  question: function(question) {\n    var _this = this;\n\n    // Get the answer name\n    var answerName = typeof question !== 'undefined' ? _this.story[question].save : _this.currentPlace.save;\n\n    // Generate text input\n    var questionForm = '<form id=\"custom-form\" autocomplete=\"off\"><input id=\"question-input\" type=\"text\" autocomplete=\"off\"><input type=\"submit\" value=\"Submit\"></form>';\n\n    // insert dom and container class\n    _this.$customForm.html(questionForm);\n    _this.$customForm = $('#custom-form-container');\n    _this.say(_this.currentPlace.description);\n    _this.$mainContainer.addClass('question');\n\n    // Set new focus element\n    _this.$focus = $('#question-input');\n\n    // Bind submit\n    _this.$customForm.find('#custom-form').bind('submit', function(event) {\n      event.preventDefault();\n      var answer = $('#question-input').val();\n\n      if ( answer === '' ) {\n        return false;\n      }\n\n      _this.save[answerName] = answer.toUpperCase();\n\n      _this.say(answer.toUpperCase());\n      _this.go(_this.currentPlace.actions.default);\n    });\n\n  },\n\n  placeExist: function(place) {\n    var _this = this;\n\n    if (typeof( _this.story[place] ) === 'object') {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n};\n$(document).ready(function () {\n  'use strict';\n  Adventure.init(Story, 'welcome');\n  //Adventure.init(Story, 'salomehOffice');\n});\n\n$(window).load(function () {\n});\n"],"sourceRoot":"/source/"}